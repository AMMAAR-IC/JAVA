import java.util.Random;

public class GameOfLife {
    static int N = 20;
    static boolean[][] grid = new boolean[N][N];

    public static void main(String[] args) throws InterruptedException {
        Random r = new Random();
        for (int i = 0; i < N; i++)
            for (int j = 0; j < N; j++)
                grid[i][j] = r.nextBoolean();

        while (true) {
            printGrid();
            step();
            Thread.sleep(500);
        }
    }

    static void step() {
        boolean[][] newGrid = new boolean[N][N];
        for (int i = 0; i < N; i++)
            for (int j = 0; j < N; j++) {
                int neighbors = count(i,j);
                if (grid[i][j]) newGrid[i][j] = neighbors == 2 || neighbors == 3;
                else newGrid[i][j] = neighbors == 3;
            }
        grid = newGrid;
    }

    static int count(int x, int y) {
        int cnt = 0;
        for (int dx = -1; dx <= 1; dx++)
            for (int dy = -1; dy <= 1; dy++) {
                if (dx==0 && dy==0) continue;
                int nx = x+dx, ny = y+dy;
                if (nx>=0 && nx<N && ny>=0 && ny<N && grid[nx][ny]) cnt++;
            }
        return cnt;
    }

    static void printGrid() {
        System.out.println("\033[H\033[2J");
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++)
                System.out.print(grid[i][j] ? "⬛" : "⬜");
            System.out.println();
        }
    }
}
